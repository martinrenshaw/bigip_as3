"web_app": {
    "class": "Application",
    "template": "http",
    "serviceMain": {
        "class": "Service_HTTP",
        "virtualAddresses": [
            "{{private_ip}}"
        ],
        "pool": "app_pool"
    },
    "app_pool": {
        "class": "Pool",
        "monitors": [
            "http"
        ],
        "members": [
            {
                "servicePort": 443,
                "serverAddresses": [
                    {% set comma = joiner(",") %}
                    {% for mem in pool_members %}
                        {{comma()}} "{{  hostvars[mem]['ansible_host']  }}"
                    {% endfor %}

                ]
            }
        ]
    }
}

{# 
There is a virtual server named serviceMain.
The template can use variables just like tasks do in previous exercises. In this case the virtual IP address is the private_ip from our inventory.
There is a Pool named app_pool
The jinja2 template can use a loop to grab all the pool members (which points to our web servers group that will be elaborated on below).
#}